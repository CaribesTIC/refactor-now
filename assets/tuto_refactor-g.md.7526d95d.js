import{_ as s,c as a,o as n,N as l}from"./chunks/framework.752867af.js";const i=JSON.parse('{"title":"Código duplicado (parte 3)","description":"","frontmatter":{},"headers":[],"relativePath":"tuto/refactor-g.md"}'),p={name:"tuto/refactor-g.md"},o=l(`<h1 id="codigo-duplicado-parte-3" tabindex="-1">Código duplicado (parte 3) <a class="header-anchor" href="#codigo-duplicado-parte-3" aria-label="Permalink to &quot;Código duplicado (parte 3)&quot;">​</a></h1><h2 id="codigo-duplicado-en-varias-clases-sin-la-misma-herencia" tabindex="-1">Código duplicado en varias clases sin la misma herencia <a class="header-anchor" href="#codigo-duplicado-en-varias-clases-sin-la-misma-herencia" aria-label="Permalink to &quot;Código duplicado en varias clases sin la misma herencia&quot;">​</a></h2><p>Como era de esperarse, el código también podrá aparecer duplicado en diferentes clases pero que no tienen la misma herencia:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">B</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">method_1</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">property </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">strip_tags</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::$</span><span style="color:#A6ACCD;">property</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">property </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">htmlentities</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">property</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">methodA</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::$</span><span style="color:#A6ACCD;">property</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">C</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">method_2</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">property </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">strip_tags</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::$</span><span style="color:#A6ACCD;">property</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">property </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">htmlentities</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">property</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::$</span><span style="color:#A6ACCD;">property </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">methodB</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">methodC</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>En estos casos, la solución es extraer el código duplicado, crear una nueva clase y con el código extraído, crear un método para esta nueva clase que podrá ser heredada por las anteriores o simplemente, instanciada.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">A</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">method_3</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">parameter</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">htmlentities</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">strip_tags</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">parameter</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">B</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">method_1</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">methodA</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">A</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">method_3</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::$</span><span style="color:#A6ACCD;">property</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">C</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">method_2</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">A</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">method_3</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::$</span><span style="color:#A6ACCD;">property</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">methodB</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">methodC</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><blockquote><p>Finalmente nuestro objetivo debería ser contar con una plataforma de desarrollo simple y eficaz, que nos permita reutilizar el código invocado desde cualquier módulo, evitando tener que repensar problemas típicos (cotidianos) y concentrarnos solo en los problemas nuevos.</p></blockquote>`,7),e=[o];function t(c,r,D,y,A,F){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
